#include <stdio.h>

#define MAX_JOBS 100
struct Job {
    int id;
    int deadline;
    int profit;
};
int compare(const void* a, const void* b) {
    return ((struct Job*)b)->profit - ((struct Job*)a)->profit;
}
void printJobScheduling(struct Job arr[], int n) {
    qsort(arr, n, sizeof(arr[0]), compare);
    int result[MAX_JOBS];
    int slot[MAX_JOBS];

    for (int i = 0; i < n; i++)
        slot[i] = -1;

    for (int i = 0; i < n; i++) {
        for (int j = arr[i].deadline - 1; j >= 0; j--) {
            if (slot[j] == -1) {
                result[j] = i;
                slot[j] = 1;
                break;
            }
        }
    }

    printf("Job Sequence with Deadline:\n");
    for (int i = 0; i < n; i++) {
        if (slot[i] != -1)
            printf("Job %d (Profit: %d) -> Deadline %d\n", arr[result[i]].id, arr[result[i]].profit, i + 1);
    }
}

int main() {
    struct Job arr[] = {{1, 2, 100}, {2, 1, 19}, {3, 2, 27}, {4, 1, 25}, {5, 3, 15}};
    int n = sizeof(arr) / sizeof(arr[0]);
    printJobScheduling(arr, n);
    return 0;
}
